module.exports = function(RED) {
    // function Compareeq(a, b) {
    //     return (a == b) ? true : false;
    // }
    function Comparegt(a, b) {
        return (a > b) ? true : false;
    }
    // function Comparegte(a, b) {
    //     return (a >= b) ? true : false;
    // }
    // function Comparelt(a, b) {
    //     return (a < b) ? true : false;
    // }
    function Comparelte(a, b) {
        return (a <= b) ? true : false;
    }
    function CheckNode(config) {
        RED.nodes.createNode(this,config);
        this.temp = config.temp;
        this.compare = config.compare;

        var node = this;

        node.on('input', function(msg) {
            var tmp = msg.payload[0].v;
            switch (node.compare) {
                // case "eq" :
                //     if(Compareeq(vl, node.volume)) {
                //         msg.payload = "";
                //         node.send(msg);
                //     } else {
                //         node.warn("Not equal");
                //     }
                //     break;
                case "gt":
                    if(Comparegt(tmp, node.temp)) {
                        msg.payload = "Nhiệt độ vượt ngưỡng cho phép!";
                        node.send(msg);
                    } 
                    // else {
                    //     node.warn("");
                    // }
                    break;
                // case "gte":
                //     if(Comparegte(vl, node.volume)) {
                //         msg.payload = true;
                //         node.send(msg);
                //     } else {
                //         node.warn("Not greater than or equal");
                //     }
                //     break;
                // case "lt":
                //     if(Comparelt(vl, node.volume)) {
                //         msg.payload = true;
                //         node.send(msg);
                //     } else {
                //         node.warn("Not less than");
                //     }
                //     break;
                case "lte":
                    if(Comparelte(tmp, node.temp)) {
                        msg.payload = "Nhiệt độ nhỏ hơn ngưỡng cho phép";
                        node.send(msg);
                    } 
                    // else {
                    //     node.warn("Not less than or equal");
                    // }
                    break;
            }
        });
    }
    RED.nodes.registerType("anomaly temp",CheckNode);
}